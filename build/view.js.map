{"version":3,"file":"view.js","mappings":";;;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EACnDD,QAAQ,CAACE,gBAAgB,CAAC,sBAAsB,CAAC,CAACC,OAAO,CAAEC,aAAa,IAAK;IAC5E,MAAMC,mBAAmB,GAAGD,aAAa,CAACE,aAAa,CAAC,0CAA0C,CAAC;IACnG,IAAIC,WAAW,GAAG,KAAK;IACvB,IAAIC,eAAe,GAAG,IAAI;IAE1B,MAAMC,qBAAqB,GAAIC,OAAO,IAAK;MAC1C,MAAMC,eAAe,GAAGD,OAAO,CAACE,UAAU,CAACN,aAAa,CAAC,6BAA6B,CAAC;MACvF,IAAIK,eAAe,EAAE;QACpBA,eAAe,CAACE,MAAM,CAAC,CAAC;MACzB;IACD,CAAC;IAED,MAAMC,kBAAkB,GAAIJ,OAAO,IAAK;MACvCD,qBAAqB,CAACC,OAAO,CAAC;MAC9B,MAAMK,OAAO,GAAGf,QAAQ,CAACgB,aAAa,CAAC,KAAK,CAAC;MAC7CD,OAAO,CAACE,SAAS,GAAG,4BAA4B;MAChDP,OAAO,CAACE,UAAU,CAACM,KAAK,CAACC,QAAQ,GAAG,UAAU,CAAC,CAAC;MAChDT,OAAO,CAACE,UAAU,CAACQ,WAAW,CAACL,OAAO,CAAC;IACxC,CAAC;IAED,MAAMM,0BAA0B,GAAGA,CAAA,KAAM;MACxC,OAAO,cAAc,IAAIC,MAAM,IAAIC,SAAS,CAACC,cAAc,GAAG,CAAC,IAAID,SAAS,CAACE,gBAAgB,GAAG,CAAC,IAAIH,MAAM,CAACI,UAAU,IAAI,GAAG;IAC9H,CAAC;IAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;MAClC,MAAMC,iBAAiB,GAAG7B,QAAQ,CAACM,aAAa,CAAC,wBAAwB,CAAC;MAC1E,IAAIuB,iBAAiB,EAAE;QACtBA,iBAAiB,CAACC,GAAG,GAAGvB,WAAW,GAAGqB,IAAI,CAACG,SAAS,GAAGH,IAAI,CAACI,UAAU;QACtE,IAAIJ,IAAI,CAACK,IAAI,EAAE;UACdnB,kBAAkB,CAACe,iBAAiB,CAAC;QACtC,CAAC,MAAM;UACNpB,qBAAqB,CAACoB,iBAAiB,CAAC;QACzC;MACD;IACD,CAAC;IAED,MAAMK,SAAS,GAAIN,IAAI,IAAK;MAC3B,IAAIO,cAAc,GAAG,EAAE;MACvB,IAAIP,IAAI,CAACG,SAAS,EAAE;QACnBI,cAAc,GAAI;AACtB;AACA,QAAQ5B,WAAW,GAAG,YAAY,GAAG,WAAY;AACjD;AACA,KAAK;MACF;MAEA6B,IAAI,CAACC,IAAI,CAAC;QACTC,IAAI,EAAG;AACX;AACA;AACA,mBAAmB/B,WAAW,GAAGqB,IAAI,CAACG,SAAS,GAAGH,IAAI,CAACI,UAAW;AAClE;AACA,gBAAgBJ,IAAI,CAACW,IAAK;AAC1B;AACA,QAAQJ,cAAe;AACvB;AACA,KAAK;QACDK,eAAe,EAAE,IAAI;QACrBC,iBAAiB,EAAE,KAAK;QACxBC,UAAU,EAAE,MAAM;QAClBC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAEA,CAAA,KAAM;UAChB,IAAIhB,IAAI,CAACG,SAAS,EAAE;YACnB/B,QAAQ,CAAC6C,cAAc,CAAC,kBAAkB,CAAC,CAAC5C,gBAAgB,CAAC,OAAO,EAAE,MAAM;cAC3EM,WAAW,GAAG,CAACA,WAAW;cAC1BoB,gBAAgB,CAACC,IAAI,CAAC,CAAC,CAAE;YAC1B,CAAC,CAAC;UACH;UACA,MAAMC,iBAAiB,GAAG7B,QAAQ,CAACM,aAAa,CAAC,wBAAwB,CAAC;UAC1E,IAAIsB,IAAI,CAACK,IAAI,EAAE;YACdnB,kBAAkB,CAACe,iBAAiB,CAAC;UACtC;QACD,CAAC;QACDiB,SAAS,EAAE;UACVC,KAAK,EAAE;QACR,CAAC;QACDC,SAAS,EAAE;UACVD,KAAK,EAAE;QACR;MACD,CAAC,CAAC;IACH,CAAC;IAED,MAAME,eAAe,GAAIrB,IAAI,IAAK;MACjC,IAAIvB,mBAAmB,EAAE;QACxBA,mBAAmB,CAACyB,GAAG,GAAGvB,WAAW,GAAGqB,IAAI,CAACG,SAAS,GAAGH,IAAI,CAACI,UAAU;MACzE;IACD,CAAC;IAED5B,aAAa,CAACF,gBAAgB,CAAC,iBAAiB,CAAC,CAACC,OAAO,CAAE+C,WAAW,IAAK;MAC1E,MAAMtB,IAAI,GAAG;QACZI,UAAU,EAAEkB,WAAW,CAACC,YAAY,CAAC,2BAA2B,CAAC;QACjEpB,SAAS,EAAEmB,WAAW,CAACC,YAAY,CAAC,0BAA0B,CAAC;QAC/DZ,IAAI,EAAEW,WAAW,CAACC,YAAY,CAAC,gBAAgB,CAAC,IAAI,2BAA2B;QAC/EC,WAAW,EAAEF,WAAW,CAAC5C,aAAa,CAAC,sBAAsB,CAAC,CAAC6C,YAAY,CAAC,MAAM,CAAC;QACnFlB,IAAI,EAAEiB,WAAW,CAACC,YAAY,CAAC,gBAAgB,CAAC,KAAK;MACtD,CAAC;MAED,MAAME,UAAU,GAAGH,WAAW,CAAC5C,aAAa,CAAC,+BAA+B,CAAC;MAC7E,IAAI+C,UAAU,EAAE;QACfA,UAAU,CAACpD,gBAAgB,CAAC,OAAO,EAAGqD,KAAK,IAAK;UAC/CA,KAAK,CAACC,eAAe,CAAC,CAAC;UACvBhD,WAAW,GAAG,CAACA,WAAW;UAC1B0C,eAAe,CAACrB,IAAI,CAAC;QACtB,CAAC,CAAC;MACH;MAEAsB,WAAW,CAACjD,gBAAgB,CAAC,YAAY,EAAE,MAAM;QAChD,IAAI,CAACoB,0BAA0B,CAAC,CAAC,EAAE;UAClCb,eAAe,GAAGoB,IAAI;UACtBrB,WAAW,GAAG,KAAK,CAAC,CAAC;UACrBF,mBAAmB,CAACyB,GAAG,GAAGF,IAAI,CAACI,UAAU;UACzC,IAAIJ,IAAI,CAACK,IAAI,EAAE;YACdnB,kBAAkB,CAACT,mBAAmB,CAAC;UACxC,CAAC,MAAM;YACNI,qBAAqB,CAACJ,mBAAmB,CAAC;UAC3C;QACD;MACD,CAAC,CAAC;MAEF6C,WAAW,CAACjD,gBAAgB,CAAC,OAAO,EAAGqD,KAAK,IAAK;QAChD,IAAIjC,0BAA0B,CAAC,CAAC,EAAE;UACjCiC,KAAK,CAACE,cAAc,CAAC,CAAC;UACtBjD,WAAW,GAAG,KAAK,CAAC,CAAC;UACrB2B,SAAS,CAACN,IAAI,CAAC;QAChB,CAAC,MAAM;UACNpB,eAAe,GAAGoB,IAAI;UACtBrB,WAAW,GAAG,KAAK,CAAC,CAAC;UACrBF,mBAAmB,CAACyB,GAAG,GAAGF,IAAI,CAACI,UAAU;UACzC,IAAIJ,IAAI,CAACK,IAAI,EAAE;YACdnB,kBAAkB,CAACT,mBAAmB,CAAC;UACxC,CAAC,MAAM;YACNI,qBAAqB,CAACJ,mBAAmB,CAAC;UAC3C;QACD;MACD,CAAC,CAAC;IACH,CAAC,CAAC;IAEF,IAAIA,mBAAmB,CAACoD,OAAO,CAACxB,IAAI,KAAK,KAAK,EAAE;MAC/CnB,kBAAkB,CAACT,mBAAmB,CAAC;IACxC,CAAC,MAAM;MACNI,qBAAqB,CAACJ,mBAAmB,CAAC;IAC3C;IAEAL,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAE,MAAM;MAC7C,IAAIO,eAAe,EAAE;QACpBH,mBAAmB,CAACyB,GAAG,GAAGvB,WAAW,GAAGC,eAAe,CAACuB,SAAS,GAAGvB,eAAe,CAACwB,UAAU;MAC/F;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC,CAAC,C","sources":["webpack://mtg-tools/./src/view.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n\tdocument.querySelectorAll('.mtg-tools-container').forEach((deckContainer) => {\n\t\tconst defaultImageElement = deckContainer.querySelector('.mtg-tools-image-column .mtg-tools-image');\n\t\tlet showingBack = false;\n\t\tlet lastHoveredCard = null;\n\n\t\tconst removeGradientOverlay = (element) => {\n\t\t\tconst existingOverlay = element.parentNode.querySelector('.mtg-tools-gradient-overlay');\n\t\t\tif (existingOverlay) {\n\t\t\t\texistingOverlay.remove();\n\t\t\t}\n\t\t};\n\n\t\tconst addGradientOverlay = (element) => {\n\t\t\tremoveGradientOverlay(element);\n\t\t\tconst overlay = document.createElement('div');\n\t\t\toverlay.className = 'mtg-tools-gradient-overlay';\n\t\t\telement.parentNode.style.position = 'relative'; // Ensure the parent has position relative for absolute overlay\n\t\t\telement.parentNode.appendChild(overlay);\n\t\t};\n\n\t\tconst isTouchscreenOrSmallScreen = () => {\n\t\t\treturn 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 || window.innerWidth <= 768;\n\t\t};\n\n\t\tconst updatePopupImage = (card) => {\n\t\t\tconst popupImageElement = document.querySelector('.mtg-tools-popup-image');\n\t\t\tif (popupImageElement) {\n\t\t\t\tpopupImageElement.src = showingBack ? card.backImage : card.frontImage;\n\t\t\t\tif (card.foil) {\n\t\t\t\t\taddGradientOverlay(popupImageElement);\n\t\t\t\t} else {\n\t\t\t\t\tremoveGradientOverlay(popupImageElement);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst showPopup = (card) => {\n\t\t\tlet flipButtonHTML = '';\n\t\t\tif (card.backImage) {\n\t\t\t\tflipButtonHTML = `\n\t\t\t\t\t<button id=\"flip-card-button\" class=\"wp-block-button__link wp-element-button mtg-tools-popup-flip-button\">\n\t\t\t\t\t\t${showingBack ? 'Show Front' : 'Show Back'}\n\t\t\t\t\t</button>\n\t\t\t\t`;\n\t\t\t}\n\n\t\t\tSwal.fire({\n\t\t\t\thtml: `\n\t\t\t\t\t<div class=\"mtg-tools-popup-content\">\n\t\t\t\t\t\t<div class=\"mtg-tools-popup-image-wrapper\">\n\t\t\t\t\t\t\t<img src=\"${showingBack ? card.backImage : card.frontImage}\"\n\t\t\t\t\t\t\t\t class=\"mtg-tools-popup-image\"\n\t\t\t\t\t\t\t\t alt=\"${card.name}\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t${flipButtonHTML}\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t\tshowCloseButton: true,\n\t\t\t\tshowConfirmButton: false,\n\t\t\t\tbackground: '#fff',\n\t\t\t\twidth: 'auto',\n\t\t\t\tdidRender: () => {\n\t\t\t\t\tif (card.backImage) {\n\t\t\t\t\t\tdocument.getElementById('flip-card-button').addEventListener('click', () => {\n\t\t\t\t\t\t\tshowingBack = !showingBack;\n\t\t\t\t\t\t\tupdatePopupImage(card);  // Update the image within the existing popup\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst popupImageElement = document.querySelector('.mtg-tools-popup-image');\n\t\t\t\t\tif (card.foil) {\n\t\t\t\t\t\taddGradientOverlay(popupImageElement);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tshowClass: {\n\t\t\t\t\tpopup: 'animate__animated animate__fadeIn'\n\t\t\t\t},\n\t\t\t\thideClass: {\n\t\t\t\t\tpopup: 'animate__animated animate__fadeOut'\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst toggleMainImage = (card) => {\n\t\t\tif (defaultImageElement) {\n\t\t\t\tdefaultImageElement.src = showingBack ? card.backImage : card.frontImage;\n\t\t\t}\n\t\t};\n\n\t\tdeckContainer.querySelectorAll('.mtg-tools-card').forEach((cardElement) => {\n\t\t\tconst card = {\n\t\t\t\tfrontImage: cardElement.getAttribute('data-card-front-image-uri'),\n\t\t\t\tbackImage: cardElement.getAttribute('data-card-back-image-uri'),\n\t\t\t\tname: cardElement.getAttribute('data-card-name') || 'Magic: The Gathering Card',\n\t\t\t\tscryfallURI: cardElement.querySelector('.mtg-tools-card-name').getAttribute('href'),\n\t\t\t\tfoil: cardElement.getAttribute('data-card-foil') === 'Yes'\n\t\t\t};\n\n\t\t\tconst flipButton = cardElement.querySelector('.mtg-tools-flip-button button');\n\t\t\tif (flipButton) {\n\t\t\t\tflipButton.addEventListener('click', (event) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tshowingBack = !showingBack;\n\t\t\t\t\ttoggleMainImage(card);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcardElement.addEventListener('mouseenter', () => {\n\t\t\t\tif (!isTouchscreenOrSmallScreen()) {\n\t\t\t\t\tlastHoveredCard = card;\n\t\t\t\t\tshowingBack = false; // Ensure we start with the front image\n\t\t\t\t\tdefaultImageElement.src = card.frontImage;\n\t\t\t\t\tif (card.foil) {\n\t\t\t\t\t\taddGradientOverlay(defaultImageElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tremoveGradientOverlay(defaultImageElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcardElement.addEventListener('click', (event) => {\n\t\t\t\tif (isTouchscreenOrSmallScreen()) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tshowingBack = false; // Start with the front image\n\t\t\t\t\tshowPopup(card);\n\t\t\t\t} else {\n\t\t\t\t\tlastHoveredCard = card;\n\t\t\t\t\tshowingBack = false; // Start with the front image\n\t\t\t\t\tdefaultImageElement.src = card.frontImage;\n\t\t\t\t\tif (card.foil) {\n\t\t\t\t\t\taddGradientOverlay(defaultImageElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tremoveGradientOverlay(defaultImageElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif (defaultImageElement.dataset.foil === 'Yes') {\n\t\t\taddGradientOverlay(defaultImageElement);\n\t\t} else {\n\t\t\tremoveGradientOverlay(defaultImageElement);\n\t\t}\n\n\t\tdocument.addEventListener('mouseleave', () => {\n\t\t\tif (lastHoveredCard) {\n\t\t\t\tdefaultImageElement.src = showingBack ? lastHoveredCard.backImage : lastHoveredCard.frontImage;\n\t\t\t}\n\t\t});\n\t});\n});\n"],"names":["document","addEventListener","querySelectorAll","forEach","deckContainer","defaultImageElement","querySelector","showingBack","lastHoveredCard","removeGradientOverlay","element","existingOverlay","parentNode","remove","addGradientOverlay","overlay","createElement","className","style","position","appendChild","isTouchscreenOrSmallScreen","window","navigator","maxTouchPoints","msMaxTouchPoints","innerWidth","updatePopupImage","card","popupImageElement","src","backImage","frontImage","foil","showPopup","flipButtonHTML","Swal","fire","html","name","showCloseButton","showConfirmButton","background","width","didRender","getElementById","showClass","popup","hideClass","toggleMainImage","cardElement","getAttribute","scryfallURI","flipButton","event","stopPropagation","preventDefault","dataset"],"sourceRoot":""}